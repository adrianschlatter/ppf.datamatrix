[metadata]
name = ppf-datamatrix
# Versions should comply with PEP440.  For a discussion on single-sourcing
# the version across setup.py and the project code, see
# https://packaging.python.org/en/latest/single_source_version.html
version = 0.1.0
description = Python port of https://github.com/datalog/datamatrix-svg
long_description = file: docs/README_pypi.md
long_description_content_type = text/markdown

# The projects main homepage.
url = https://github.com/adrianschlatter/ppf.datamatrix/tree/master
# Author details
author = Adrian Schlatter
# Do *not* provide author_email here. Instead, provide email for
# software / licensing / ... questions (centrally) on GitHub.
# If email changes (e.g. discard because of too much spam),
# adjust email in single place instead of in every package.
# author_email = private@private.pr
# Choose your license
license = MIT
# See https://pypi.python.org/pypi?%3Aaction=list_classifiers
classifiers =
    # How mature is this project? Common values are
    #   3 - Alpha
    #   4 - Beta
    #   5 - Production/Stable
    Development Status :: 4 - Beta
    # Indicate who your project is intended for
    Intended Audience :: Developers
    Intended Audience :: Manufacturing
    Intended Audience :: Information Technology
    Intended Audience :: Other Audience
    Topic :: Utilities
    # Pick your license as you wish (should match "license" above)
    License :: OSI Approved :: MIT License
    # Specify the Python versions you support here. In particular, ensure
    # that you indicate whether you support Python 2, Python 3 or both.
    Programming Language :: Python :: 3
    Operating System :: OS Independent
    Framework :: IPython
# What does your project relate to?
keywords = datamatrix, svg, python, ipython, codecs

[options]
# You can just specify the packages manually here if your project is
# simple. Or you can use find_packages().
package_dir = 
	= src
packages = find_namespace:
# List run-time dependencies here.  These will be installed by pip when
# your project is installed. For an analysis of "install_requires" vs pips
# requirements files see:
# https://packaging.python.org/en/latest/requirements.html
# install_requires=,

[options.packages.find]
where = src

[options.extras_require]
# List additional groups of dependencies here (e.g. development
# dependencies). You can install these using the following syntax,
# for example:
# $ pip install -e .[dev,test]
dev = check-manifest
test = pytest; twine; check-manifest; readme_renderer; flake8; coverage

[check-manifest]
ignore =
    tox.ini
    tests
    tests/**
    docs/**

[flake8]
per-file-ignores =
    # imported but unused, import *, undefined name:
    __init__.py: F401, F403, F821
    # imported but unused: Needed due to side-effects of import:
    test_X12.py: F401
    test_C40.py: F401
    test_text.py: F401
    # bare except: We *are* trying to crash it:
    test_smoke.py: E722
